{"ast":null,"code":"import * as shp3 from \"../../../assets/shapedata/Shapefile3.json\";\nimport * as L from 'leaflet';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\n\nfunction TypographyComponent_h6_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h6\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"number\");\n    i0.ɵɵpipe(3, \"number\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const marker_r3 = ctx.$implicit;\n    const i_r4 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\" \", ctx_r0.myMarkers[i_r4].title, \" // \", i0.ɵɵpipeBind2(2, 3, marker_r3.getLatLng().lat, \"1.0-2\"), \" // \", i0.ɵɵpipeBind2(3, 6, marker_r3.getLatLng().lng, \"1.0-2\"), \" \");\n  }\n}\n\nfunction TypographyComponent_button_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function TypographyComponent_button_14_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.clearMarkers();\n    });\n    i0.ɵɵtext(1, \" L\\u00F6sche alle Marker \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TypographyComponent_button_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function TypographyComponent_button_15_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.calculateRoute();\n    });\n    i0.ɵɵtext(1, \" Berechne Routen \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let TypographyComponent = /*#__PURE__*/(() => {\n  class TypographyComponent {\n    constructor() {\n      this.markers = [];\n      this.myMarkers = [];\n      this.hospitalBool = false;\n      this.markerCounter = 1;\n      this.popupText = \"Some popup text\";\n      this.markerIcon = {\n        icon: L.icon({\n          iconSize: [25, 41],\n          iconAnchor: [10, 41],\n          popupAnchor: [2, -40],\n          // specify the path here\n          iconUrl: \"https://unpkg.com/leaflet@1.4.0/dist/images/marker-icon.png\",\n          shadowUrl: \"https://unpkg.com/leaflet@1.4.0/dist/images/marker-shadow.png\"\n        })\n      };\n      this.hospitalBool = false;\n    }\n\n    initMap() {\n      this.map = L.map('map', {\n        center: [51.04962, 12.1369],\n        zoom: 10\n      });\n      const tiles = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        maxZoom: 18,\n        minZoom: 3,\n        attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\n      });\n      tiles.addTo(this.map);\n    }\n\n    addLayer() {\n      var jsonString = JSON.stringify(shp3);\n      var jsonOBJ = JSON.parse(jsonString);\n      this.geojsonLayer = new L.GeoJSON(jsonOBJ);\n      this.geojsonLayer.addTo(this.map);\n      this.geojsonLayer.on('click', function (e) {\n        console.log(e.layer);\n\n        if (e.layer.selected) {\n          e.layer.selected = false;\n        } else {\n          e.layer.selected = true;\n        }\n      });\n      /*this.geojsonLayer.on(\"click\", e => {\n       \n        this.map.zoomIn();\n             console.log(this.geojsonLayer);\n       \n        \n         \n      });*/\n    }\n\n    addMarker() {\n      const newMarker = L.marker([51.04962, 12.1369], this.markerIcon);\n      this.markers.push(newMarker);\n      newMarker.addTo(this.map);\n    }\n\n    clearMarkers() {\n      for (var i = 0; i < this.markers.length; i++) {\n        this.map.removeLayer(this.markers[i]);\n      }\n\n      this.markers = [];\n      this.myMarkers = [];\n      this.markerCounter = 1;\n    }\n\n    calculateRoute() {\n      console.log(this.myMarkers);\n\n      for (var i = 0; i < this.markers.length; i++) {\n        alert(this.markers[i].getLatLng().lat);\n      }\n    }\n\n    ngAfterViewInit() {\n      this.initMap();\n      console.log(\"first\" + this.map);\n      this.map.on(\"click\", e => {\n        if (this.hospitalBool === false) {\n          console.log(e.latlng); // get the coordinates\n\n          var myMarker = {\n            type: \"hospital\",\n            title: \"Krankenhaus\",\n            lat: e.latlng.lat,\n            lng: e.latlng.lng\n          };\n          this.myMarkers.push(myMarker);\n          var newMarker = L.marker([e.latlng.lat, e.latlng.lng], {\n            draggable: true,\n            autoPan: true,\n            icon: L.icon({\n              iconSize: [25, 41],\n              iconAnchor: [10, 41],\n              popupAnchor: [2, -40],\n              // specify the path here\n              iconUrl: \"https://unpkg.com/leaflet@1.4.0/dist/images/layers.png\",\n              shadowUrl: \"https://unpkg.com/leaflet@1.4.0/dist/images/marker-shadow.png\"\n            })\n          }).bindTooltip(\"Krankenhaus\", {\n            permanent: true,\n            direction: 'right'\n          }).addTo(this.map); // add the marker onclick\n\n          this.hospitalBool = true;\n          this.markers.push(newMarker);\n        } else {\n          var title = \"Ort \" + this.markers.length;\n          var myMarker = {\n            type: \"location\",\n            title: title,\n            lat: e.latlng.lat,\n            lng: e.latlng.lng\n          };\n          this.myMarkers.push(myMarker);\n          var newMarker = L.marker([e.latlng.lat, e.latlng.lng], {\n            draggable: true,\n            autoPan: true,\n            icon: L.icon({\n              iconSize: [25, 41],\n              iconAnchor: [10, 41],\n              popupAnchor: [2, -40],\n              // specify the path here\n              iconUrl: \"https://unpkg.com/leaflet@1.4.0/dist/images/marker-icon.png\",\n              shadowUrl: \"https://unpkg.com/leaflet@1.4.0/dist/images/marker-shadow.png\"\n            })\n          }).bindTooltip(title, {\n            permanent: true,\n            direction: 'right'\n          }).addTo(this.map); // add the marker onclick\n\n          this.markers.push(newMarker);\n        }\n      });\n      /*   this.map.on(\"click\", e => {\n           this.map.zoomIn();\n           this.map.panTo([e.latlng.lat, e.latlng.lng]);\n         });*/\n    }\n\n  }\n\n  TypographyComponent.ɵfac = function TypographyComponent_Factory(t) {\n    return new (t || TypographyComponent)();\n  };\n\n  TypographyComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TypographyComponent,\n    selectors: [[\"typography-cmp\"]],\n    decls: 16,\n    vars: 3,\n    consts: [[1, \"row\"], [1, \"col-md-12\"], [1, \"card\"], [1, \"card-header\"], [1, \"title\"], [1, \"category\"], [1, \"card-body\"], [1, \"map-container2\"], [1, \"map-frame\"], [\"id\", \"map\"], [4, \"ngFor\", \"ngForOf\"], [3, \"click\", 4, \"ngIf\"], [3, \"click\"]],\n    template: function TypographyComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h5\", 4);\n        i0.ɵɵtext(5, \"Hitzewellenszenario\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"p\", 5);\n        i0.ɵɵtext(7, \" Beispielszenario \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 6)(9, \"div\", 7)(10, \"div\", 8);\n        i0.ɵɵelement(11, \"div\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\");\n        i0.ɵɵtemplate(13, TypographyComponent_h6_13_Template, 4, 9, \"h6\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(14, TypographyComponent_button_14_Template, 2, 0, \"button\", 11);\n        i0.ɵɵtemplate(15, TypographyComponent_button_15_Template, 2, 0, \"button\", 11);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngForOf\", ctx.markers);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.hospitalBool);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.hospitalBool);\n      }\n    },\n    directives: [i1.NgForOf, i1.NgIf],\n    pipes: [i1.DecimalPipe],\n    styles: [\"h1[_ngcontent-%COMP%]{color:red}.card[_ngcontent-%COMP%]{height:1000px}.map-container2[_ngcontent-%COMP%]{position:absolute;top:0;left:0;right:0;bottom:0;height:400px;width:1000px;margin:60px}.map-frame[_ngcontent-%COMP%]{border:2px solid white;height:100%;margin-top:450px}#map[_ngcontent-%COMP%]{height:100%}\"]\n  });\n  return TypographyComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}